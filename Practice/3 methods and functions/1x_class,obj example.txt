#1
- Class is a blueprint to create objects.
- Integer, Float, String, etc., are in-built types in Python.
- To create our type like a computer, we have to create our own class for it. 
- To use the type that you have created, you need to define a class for it.
- A class can be defined by using the class keyword and every class must have a name to it.

The syntax for creating a class:-
 class class_name:
  methods():
   statements
  variables

- A class consists of two things:
1. Attributes  - Variables
2. Behaviour - Methods (Functions)

#2
- An object of a class can be defined by a  variable and assigned its value with the type of the class.
- A class can have multiple objects.

Syntax of creating an object:-
 object variable = class_name()

#3
- type() return the type of a value that is present inside the variable.
- If we will return the type of an object, then it will print the class name. It means an object belongs to a type of particular class.
- String, integer, etc are also object that belongs to some in-build class like str and int respectively.

#4
- We can call any method from a class.
- The behaviour of every object will be different from each other so need to define for which object, you are calling a method.
- So, we need to pass an object in it as a parameter at the time of calling a method.
The syntax for calling a method:-
 class_name.method_name(object variable)

- We pass an object to a method as an argument that will go into the self.
- Self is the object that you are passing in a method.
- We can also call a method in another way:
 object_variable.method_name()

---------------------------------------
